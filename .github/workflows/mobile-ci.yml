name: mobile-ci

on:
  workflow_call:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v3
      - name: ‚öôÔ∏è Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - name: üè¶ Cache dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
      - name: üì¶ Install dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci --ignore scripts

  eas-update:
    needs: build
    if: github.actor != 'dependabot[bot]'
    uses: ./.github/workflows/expo-eas-update.yml
    with:
      channel: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || 'preview' }}
      message: ${{ github.event.head_commit.message || github.event.pull_request.title }}
    secrets:
      expo-token: ${{ secrets.EXPO_TOKEN }}
  
  build-ios:
    needs: build
    if: github.event_name == 'pull_request' && startsWith(github.event.pull_request.title, '[OPTIC-RELEASE-AUTOMATION]')
    uses: ./.github/workflows/expo-eas-build.yml
    with:
      profile: production
      platform: ios
    secrets:
      expo-token: ${{ secrets.EXPO_TOKEN }}

  build-android:
    needs: build
    if: github.event_name == 'pull_request' && startsWith(github.event.pull_request.title, '[OPTIC-RELEASE-AUTOMATION]')
    uses: ./.github/workflows/expo-eas-build.yml
    with:
      profile: production
      platform: android
    secrets:
      expo-token: ${{ secrets.EXPO_TOKEN }}
